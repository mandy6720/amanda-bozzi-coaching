{"version":3,"sources":["../../../src/loaders/gatsby-module-loader/index.js"],"names":["loaderUtils","require","path","module","exports","pitch","remainingRequest","cacheable","query","parseQuery","chunkName","name","interpolateName","context","regExp","JSON","stringify","request","stringifyRequest","callback","executor","result","join","__dirname"],"mappings":";;AAAA;;;;;;AAMA,IAAMA,cAAcC,QAAS,cAAT,CAApB;AACA,IAAMC,OAAOD,QAAS,MAAT,CAAb;;AAEAE,OAAOC,OAAP,GAAiB,YAAW,CAAE,CAA9B;AACAD,OAAOC,OAAP,CAAeC,KAAf,GAAuB,UAASC,gBAAT,EAA2B;AAChD,OAAKC,SAAL,IAAkB,KAAKA,SAAL,EAAlB;;AAEA,MAAMC,QAAQR,YAAYS,UAAZ,CAAuB,KAAKD,KAA5B,CAAd;AACA,MAAIE,YAAa,EAAjB;;AAEA,MAAIF,MAAMG,IAAV,EAAgB;AACdD,gBAAYV,YAAYY,eAAZ,CAA4B,IAA5B,EAAkCJ,MAAMG,IAAxC,EAA8C;AACxDE,eAASL,MAAMK,OADyC;AAExDC,cAAQN,MAAMM;AAF0C,KAA9C,CAAZ;AAIAJ,gBAAa,KAAIK,KAAKC,SAAL,CAAeN,SAAf,CAA0B,EAA3C;AACD;;AAED,MAAMO,UAAUjB,YAAYkB,gBAAZ,CAA6B,IAA7B,EAAoC,IAAD,GAAOZ,gBAA1C,CAAhB;;AAEA,MAAMa,WAAY,8BAAD,GAAiCF,OAAjC,GAA4C,KAA7D;;AAEA,MAAMG,WAAY;;;;;;qBAMCD,QAAS;;SAErBT,SAAU;KARjB;;AAWA,MAAMW,SAAU;;QAEVrB,YAAYkB,gBAAZ,CACA,IADA,EAEC,IAAGhB,KAAKoB,IAAL,CAAUC,SAAV,EAAsB,UAAtB,CAAiC,EAFrC,CAGA;;sCAE8BH,QAAS;KAP7C;;AAUA,SAAOC,MAAP;AACD,CAxCD","file":"index.js","sourcesContent":["/*\n  Based on Tobias Koppers @sokra bundle-loader\n  https://github.com/webpack/bundle-loader\n\n  and Arthur Stolyar's async-module-loader\n*/\nconst loaderUtils = require(`loader-utils`)\nconst path = require(`path`)\n\nmodule.exports = function() {}\nmodule.exports.pitch = function(remainingRequest) {\n  this.cacheable && this.cacheable()\n\n  const query = loaderUtils.parseQuery(this.query)\n  let chunkName = ``\n\n  if (query.name) {\n    chunkName = loaderUtils.interpolateName(this, query.name, {\n      context: query.context,\n      regExp: query.regExp,\n    })\n    chunkName = `, ${JSON.stringify(chunkName)}`\n  }\n\n  const request = loaderUtils.stringifyRequest(this, `!!` + remainingRequest)\n\n  const callback = `function() { return require(` + request + `) }`\n\n  const executor = `\n     return require.ensure([], function(_, error) {\n        if (error) {\n          console.log('bundle loading error', error)\n          cb(true)\n        } else {\n          cb(null, ${callback})\n        }\n      }${chunkName});\n    `\n\n  const result = `\n    require(\n      ${loaderUtils.stringifyRequest(\n        this,\n        `!${path.join(__dirname, `patch.js`)}`\n      )}\n    );\n    module.exports = function(cb) { ${executor} }\n    `\n\n  return result\n}\n"]}