"use strict";

/*
  Based on Tobias Koppers @sokra bundle-loader
  https://github.com/webpack/bundle-loader

  and Arthur Stolyar's async-module-loader
*/
var loaderUtils = require(`loader-utils`);
var path = require(`path`);

module.exports = function () {};
module.exports.pitch = function (remainingRequest) {
  this.cacheable && this.cacheable();

  var query = loaderUtils.parseQuery(this.query);
  var chunkName = ``;

  if (query.name) {
    chunkName = loaderUtils.interpolateName(this, query.name, {
      context: query.context,
      regExp: query.regExp
    });
    chunkName = `, ${JSON.stringify(chunkName)}`;
  }

  var request = loaderUtils.stringifyRequest(this, `!!` + remainingRequest);

  var callback = `function() { return require(` + request + `) }`;

  var executor = `
     return require.ensure([], function(_, error) {
        if (error) {
          console.log('bundle loading error', error)
          cb(true)
        } else {
          cb(null, ${callback})
        }
      }${chunkName});
    `;

  var result = `
    require(
      ${loaderUtils.stringifyRequest(this, `!${path.join(__dirname, `patch.js`)}`)}
    );
    module.exports = function(cb) { ${executor} }
    `;

  return result;
};
//# sourceMappingURL=index.js.map